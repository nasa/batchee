[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "batchee"
dynamic = [
    "version",
    "classifiers"
]
description = "Determine how to group together input files into batches for subsequent concatenation"
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.12,<4"
authors = [
    { name = "Daniel Kaufman", email = "daniel.kaufman@nasa.gov" }
]
dependencies = [
    "harmony-service-lib (>=2.0.0)",
]

[project.urls]
Repository = "https://github.com/nasa/batchee"
Changelog = "https://github.com/nasa/batchee/blob/main/CHANGELOG.md"

[project.scripts]
batchee_harmony = 'batchee.harmony.cli:main'
batchee = 'batchee.tempo_filename_parser:main'

[tool.poetry]
version = "1.4.0"
packages = [
    { include = "batchee" },
]

[tool.poetry.group.dev.dependencies]
coverage = ">=7.8.0"
ruff = ">=0.11.8"
pytest = ">=8.3.5"
mypy = ">=1.15.0"
pytest-cov = ">=6.1.1"

[[tool.mypy.overrides]]
module = [
  "harmony.*",
  "pystac.*"
]
ignore_missing_imports = true

[tool.ruff]
builtins = ["ellipsis"]
exclude = [
  ".eggs",
  "doc",
  "_typed_ops.pyi",
]
# Allow lines to be as long as 100.
line-length = 100
target-version = "py312"

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
  "E402",
  "E501",
  "E731",
]
select = [
  "F", # Pyflakes
  "E", # Pycodestyle
  "W",
  "I", # isort
  "UP", # Pyupgrade
]
